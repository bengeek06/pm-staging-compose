
services:
  pgsql:
    image: postgres:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - pgsql
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  backend:
    build: ./backend
    environment:
      DATABASE_URL: postgres://user:password@pgsql:5432/mydb
      # Ajoute ici d'autres variables nécessaires à ton backend
    depends_on:
      - pgsql
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app

  swagger-ui:
    image: swaggerapi/swagger-ui
    environment:
      SWAGGER_JSON: /openapi/openapi.yml
    volumes:
      - ./backend/openapi.yml:/openapi/openapi.yml
    ports:
      - "8081:8080"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - pgsql

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"

  
  sentry:
    image: sentry:latest
    links:
    - redis
    - pgsql
    ports:
    - 9000:9000
    stdin_open: true
    tty: true
    environment:
      SENTRY_SECRET_KEY: 'your_secret_key'
      SENTRY_POSTGRES_HOST: pgsql
      SENTRY_DB_USER: user
      SENTRY_DB_PASSWORD: password
      SENTRY_REDIS_HOST: redis

  sentry-cron:
    image: sentry:latest
    links:
    - redis
    - pgsql
    command: "sentry run cron"
    environment:
      SENTRY_SECRET_KEY: 'your_secret_key'
      SENTRY_POSTGRES_HOST: pgsql
      SENTRY_DB_USER: user
      SENTRY_DB_PASSWORD: password
      SENTRY_REDIS_HOST: redis

  sentry-worker:
    image: sentry:latest
    links:
    - redis
    - pgsql
    command: "sentry run worker"
    environment:
        SENTRY_SECRET_KEY: 'your_secret_key'
        SENTRY_POSTGRES_HOST: pgsql
        SENTRY_DB_USER: user
        SENTRY_DB_PASSWORD: password
        SENTRY_REDIS_HOST: redis

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9001:9001"  # Console web
      - "9002:9000"  # API S3 (remappé pour éviter conflit avec sentry)
    volumes:
      - minio_data:/data

volumes:
  pgdata:
  pgadmin_data:
  minio_data: