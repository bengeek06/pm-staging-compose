services:

  nexi-pm:
    build: ./pm-front
    env_file: ./pm-front/.env.development
    ports:
      - "3000:3000"
    depends_on:
      - identity_service
      - auth_service
    volumes:
      - ./pm-front:/app
      - nexi_pm_node_modules:/app/node_modules


  identity_service:
    build: ./pm-identity-api
    env_file: ./pm-identity-api/.env.staging
    ports:
      - "5002:5000"
    depends_on:
      - identity_db
    volumes:
      - ./pm-identity-api:/app

  identity_db:
    image: postgres:16
    environment:
      POSTGRES_USER: identity
      POSTGRES_PASSWORD: password
      POSTGRES_DB: identity_staging
    ports:
      - "5434:5432"
    volumes:
      - identity_db_data:/var/lib/postgresql/data
  
  auth_service:
    build: ./pm-auth-api
    env_file: ./pm-auth-api/.env.staging
    ports:
      - "5001:5000"
    depends_on:
      - auth_db
    volumes:
      - ./pm-auth-api:/app

  auth_db:
    image: postgres:16
    environment:
      POSTGRES_USER: auth
      POSTGRES_PASSWORD: password
      POSTGRES_DB: auth_staging
    ports:
      - "5433:5432"
    volumes:
      - auth_db_data:/var/lib/postgresql/data
  
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - identity_db
      - auth_db
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  swagger-ui:
    image: swaggerapi/swagger-ui
    environment:
      URLS: |
        [
          {"url": "/openapi/pm-auth-api.yml", "name": "PM Auth API"},
          {"url": "/openapi/pm-identity-api.yml", "name": "PM Identity API"},
        ]
    volumes:
      - ./pm-auth-api/openapi.yml:/usr/share/nginx/html/openapi/pm-auth-api.yml
      - ./pm-identity-api/openapi.yml:/usr/share/nginx/html/openapi/pm-identity-api.yml
    ports:
      - "8081:8080"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3200:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./conf/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

#  redis:
#    image: redis:latest
#    ports:
#      - "6379:6379"

#  minio:
#    image: minio/minio:latest
#    environment:
#      MINIO_ROOT_USER: minioadmin
#      MINIO_ROOT_PASSWORD: minioadmin
#    command: server /data --console-address ":9001"
#    ports:
#      - "9001:9001"  # Console web
#      - "9000:9000"  # API S3
#    volumes:
#      - minio_data:/data

  loki:
    image: grafana/loki:3.4.1
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-config.yaml
    volumes:
      - loki_data:/loki
      - ./conf/loki-config.yaml:/etc/loki/loki-config.yaml

  promtail:
    image: grafana/promtail:3.4.1
    volumes:
      - /var/log:/var/log
      - ./conf/promtail-config.yaml:/etc/promtail/config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki

#  node-exporter:
#    image: prom/node-exporter:latest
#    ports:
#      - "9100:9100"
#    restart: unless-stopped

#  cadvisor:
#    image: gcr.io/cadvisor/cadvisor:latest
#    ports:
#      - "8180:8080"
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:ro
#      - /sys:/sys:ro
#      - /var/lib/docker/:/var/lib/docker:ro
#    restart: unless-stopped

volumes:
  identity_db_data:
  auth_db_data:
  pgadmin_data:
  nexi_pm_node_modules:
#  minio_data:
  grafana_data:
  loki_data:
